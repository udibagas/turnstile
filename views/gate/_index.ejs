<h1 class="my-4">Gate</h1>

<button type="button" class="btn btn-primary mb-4" id="btn-add">
  Tambah Gate
</button>

<table class="table">
  <thead>
    <tr>
      <th>No.</th>
      <th>Nama</th>
      <th>Host</th>
      <th>Port</th>
      <th class="text-center" style="width: 150px">Action</th>
    </tr>
  </thead>
  <tbody>
    <% gates.forEach(({id, name, host, port,}, index) => { %>
    <tr>
      <td><%= index + 1 %></td>
      <td><%= name %></td>
      <td><%= host %></td>
      <td><%= port %></td>
      <td class="text-center">
        <a
          class="btn btn-info btn-sm btn-reconnect"
          data-id="<%= id %>"
          href="#"
          >Reconnect</a
        >
        <a
          class="btn btn-info btn-sm btn-edit"
          data-id="<%= id %>"
          data-name="<%= name %>"
          data-host="<%= host %>"
          data-port="<%= port  %>"
          href="#"
          >Edit</a
        >
        <a class="btn btn-danger btn-sm btn-delete" data-id="<%= id %>" href="#"
          >Hapus</a
        >
      </td>
    </tr>
    <% }) %>
  </tbody>
</table>

<%- include('_form') %>

<script>
  const inputElement = {};
  inputElement.id = document.querySelector("#id");
  inputElement.name = document.querySelector("#name");
  inputElement.host = document.querySelector("#host");
  inputElement.port = document.querySelector("#port");

  const modal = new bootstrap.Modal("#formModal");
  const addBtn = document.querySelector("#btn-add");
  const form = document.querySelector("#gate-form");

  function openForm(data) {
    const formTitle = document.querySelector("#formModalLabel");
    const { id = "", name = "", host = "", port = "" } = data;
    formTitle.innerText = id ? "Edit Gate" : "Tambah Gate";
    inputElement.id.value = id;
    inputElement.name.value = name;
    inputElement.host.value = host;
    inputElement.port.value = port;
    modal.show();
  }

  function save({ id, name, host, port }) {
    const url = id ? `/gate/${id}` : "/gate";
    const method = id ? "PUT" : "POST";

    fetch(url, {
      method,
      body: JSON.stringify({ name, host, port }),
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
    })
      .then(async (res) => {
        if (!res.ok) throw res;
        const { message, data } = await res.json();
        window.location.reload();
      })
      .catch(async (res) => {
        console.log(res);
        if (res.status == 400) {
          const { errors } = await res.json();
          showValidationError(errors);
        }
      });
  }

  function showValidationError(errors) {
    form.classList.add("was-validated");
    const validation = {};
    validation.name = document.querySelector("#name-validation");
    validation.host = document.querySelector("#host-validation");
    validation.port = document.querySelector("#port-validation");

    for (let k in validation) {
      if (errors[k]) {
        inputElement[k].classList.add("is-invalid");
        validation[k].innerText = errors[k].join(", ");
      } else {
        inputElement[k].classList.add("is-valid");
        validation[k].innerText = "";
      }
    }
  }

  // ADD
  addBtn.addEventListener("click", (e) => {
    e.preventDefault();
    openForm({});
  });

  // EDIT
  document.querySelectorAll(".btn-edit").forEach((el) => {
    el.addEventListener("click", (e) => {
      e.preventDefault();
      openForm(el.dataset);
    });
  });

  // DELETE
  document.querySelectorAll(".btn-delete").forEach((el) => {
    el.addEventListener("click", async (e) => {
      e.preventDefault();
      const { id } = el.dataset;
      if (confirm("Anda yakin akan menghapus gate ini?")) {
        try {
          await fetch(`/gate/${id}`, { method: "DELETE" });
          window.location.reload();
        } catch (error) {
          console.log(error.message);
        }
      }
    });
  });

  // CREATE & UPDATE
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const { id, name, host, port } = inputElement;
    const payload = {
      id: id.value || null,
      name: name.value,
      host: host.value,
      port: port.value,
    };

    save(payload);
  });

  // RECONNECT
  document.querySelectorAll(".btn-reconnect").forEach((el) => {
    el.addEventListener("click", (e) => {
      e.preventDefault();
      fetch(`/gate/reconnect/${el.dataset.id}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      })
        .then((res) => res.json())
        .then((json) => {
          alert(json.message);
        })
        .catch((err) => {
          console.log(err);
        });
    });
  });
</script>
